// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

#ifndef PROTOBUF_scene_2eproto__INCLUDED
#define PROTOBUF_scene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_scene_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsStruct_Player_StatusImpl();
void InitDefaultsStruct_Player_Status();
void InitDefaultsStruct_Monster_StatusImpl();
void InitDefaultsStruct_Monster_Status();
void InitDefaultsScene_EnterEnroll_Request_22000Impl();
void InitDefaultsScene_EnterEnroll_Request_22000();
void InitDefaultsScene_EnterEnroll_Response_22001Impl();
void InitDefaultsScene_EnterEnroll_Response_22001();
void InitDefaultsScene_Player_Movement_Request_22002Impl();
void InitDefaultsScene_Player_Movement_Request_22002();
void InitDefaultsScene_Player_Movement_Response_22003Impl();
void InitDefaultsScene_Player_Movement_Response_22003();
void InitDefaultsScene_Brocast_player_Movement_22011Impl();
void InitDefaultsScene_Brocast_player_Movement_22011();
void InitDefaultsScene_LeaveScene_Request_22004Impl();
void InitDefaultsScene_LeaveScene_Request_22004();
void InitDefaultsScene_LeaveScene_Response_22005Impl();
void InitDefaultsScene_LeaveScene_Response_22005();
void InitDefaultsScene_Brocast_new_player_enter_22006Impl();
void InitDefaultsScene_Brocast_new_player_enter_22006();
void InitDefaultsScene_Brocast_player_leave_22007Impl();
void InitDefaultsScene_Brocast_player_leave_22007();
void InitDefaultsPlayer_Hit_Monster_Request_22008Impl();
void InitDefaultsPlayer_Hit_Monster_Request_22008();
void InitDefaultsPlayer_Hit_Monster_Response_22009Impl();
void InitDefaultsPlayer_Hit_Monster_Response_22009();
void InitDefaultsScene_Brocast_Player_Attack_Monster_22010Impl();
void InitDefaultsScene_Brocast_Player_Attack_Monster_22010();
void InitDefaultsScene_Notify_Self_Other_Entity_EnterImpl();
void InitDefaultsScene_Notify_Self_Other_Entity_Enter();
void InitDefaultsScene_Notify_Self_Other_Entity_LeaveImpl();
void InitDefaultsScene_Notify_Self_Other_Entity_Leave();
inline void InitDefaults() {
  InitDefaultsStruct_Player_Status();
  InitDefaultsStruct_Monster_Status();
  InitDefaultsScene_EnterEnroll_Request_22000();
  InitDefaultsScene_EnterEnroll_Response_22001();
  InitDefaultsScene_Player_Movement_Request_22002();
  InitDefaultsScene_Player_Movement_Response_22003();
  InitDefaultsScene_Brocast_player_Movement_22011();
  InitDefaultsScene_LeaveScene_Request_22004();
  InitDefaultsScene_LeaveScene_Response_22005();
  InitDefaultsScene_Brocast_new_player_enter_22006();
  InitDefaultsScene_Brocast_player_leave_22007();
  InitDefaultsPlayer_Hit_Monster_Request_22008();
  InitDefaultsPlayer_Hit_Monster_Response_22009();
  InitDefaultsScene_Brocast_Player_Attack_Monster_22010();
  InitDefaultsScene_Notify_Self_Other_Entity_Enter();
  InitDefaultsScene_Notify_Self_Other_Entity_Leave();
}
}  // namespace protobuf_scene_2eproto
namespace SceneMsg {
class Player_Hit_Monster_Request_22008;
class Player_Hit_Monster_Request_22008DefaultTypeInternal;
extern Player_Hit_Monster_Request_22008DefaultTypeInternal _Player_Hit_Monster_Request_22008_default_instance_;
class Player_Hit_Monster_Response_22009;
class Player_Hit_Monster_Response_22009DefaultTypeInternal;
extern Player_Hit_Monster_Response_22009DefaultTypeInternal _Player_Hit_Monster_Response_22009_default_instance_;
class Scene_Brocast_Player_Attack_Monster_22010;
class Scene_Brocast_Player_Attack_Monster_22010DefaultTypeInternal;
extern Scene_Brocast_Player_Attack_Monster_22010DefaultTypeInternal _Scene_Brocast_Player_Attack_Monster_22010_default_instance_;
class Scene_Brocast_new_player_enter_22006;
class Scene_Brocast_new_player_enter_22006DefaultTypeInternal;
extern Scene_Brocast_new_player_enter_22006DefaultTypeInternal _Scene_Brocast_new_player_enter_22006_default_instance_;
class Scene_Brocast_player_Movement_22011;
class Scene_Brocast_player_Movement_22011DefaultTypeInternal;
extern Scene_Brocast_player_Movement_22011DefaultTypeInternal _Scene_Brocast_player_Movement_22011_default_instance_;
class Scene_Brocast_player_leave_22007;
class Scene_Brocast_player_leave_22007DefaultTypeInternal;
extern Scene_Brocast_player_leave_22007DefaultTypeInternal _Scene_Brocast_player_leave_22007_default_instance_;
class Scene_EnterEnroll_Request_22000;
class Scene_EnterEnroll_Request_22000DefaultTypeInternal;
extern Scene_EnterEnroll_Request_22000DefaultTypeInternal _Scene_EnterEnroll_Request_22000_default_instance_;
class Scene_EnterEnroll_Response_22001;
class Scene_EnterEnroll_Response_22001DefaultTypeInternal;
extern Scene_EnterEnroll_Response_22001DefaultTypeInternal _Scene_EnterEnroll_Response_22001_default_instance_;
class Scene_LeaveScene_Request_22004;
class Scene_LeaveScene_Request_22004DefaultTypeInternal;
extern Scene_LeaveScene_Request_22004DefaultTypeInternal _Scene_LeaveScene_Request_22004_default_instance_;
class Scene_LeaveScene_Response_22005;
class Scene_LeaveScene_Response_22005DefaultTypeInternal;
extern Scene_LeaveScene_Response_22005DefaultTypeInternal _Scene_LeaveScene_Response_22005_default_instance_;
class Scene_Notify_Self_Other_Entity_Enter;
class Scene_Notify_Self_Other_Entity_EnterDefaultTypeInternal;
extern Scene_Notify_Self_Other_Entity_EnterDefaultTypeInternal _Scene_Notify_Self_Other_Entity_Enter_default_instance_;
class Scene_Notify_Self_Other_Entity_Leave;
class Scene_Notify_Self_Other_Entity_LeaveDefaultTypeInternal;
extern Scene_Notify_Self_Other_Entity_LeaveDefaultTypeInternal _Scene_Notify_Self_Other_Entity_Leave_default_instance_;
class Scene_Player_Movement_Request_22002;
class Scene_Player_Movement_Request_22002DefaultTypeInternal;
extern Scene_Player_Movement_Request_22002DefaultTypeInternal _Scene_Player_Movement_Request_22002_default_instance_;
class Scene_Player_Movement_Response_22003;
class Scene_Player_Movement_Response_22003DefaultTypeInternal;
extern Scene_Player_Movement_Response_22003DefaultTypeInternal _Scene_Player_Movement_Response_22003_default_instance_;
class Struct_Monster_Status;
class Struct_Monster_StatusDefaultTypeInternal;
extern Struct_Monster_StatusDefaultTypeInternal _Struct_Monster_Status_default_instance_;
class Struct_Player_Status;
class Struct_Player_StatusDefaultTypeInternal;
extern Struct_Player_StatusDefaultTypeInternal _Struct_Player_Status_default_instance_;
}  // namespace SceneMsg
namespace SceneMsg {

// ===================================================================

class Struct_Player_Status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Struct_Player_Status) */ {
 public:
  Struct_Player_Status();
  virtual ~Struct_Player_Status();

  Struct_Player_Status(const Struct_Player_Status& from);

  inline Struct_Player_Status& operator=(const Struct_Player_Status& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Struct_Player_Status(Struct_Player_Status&& from) noexcept
    : Struct_Player_Status() {
    *this = ::std::move(from);
  }

  inline Struct_Player_Status& operator=(Struct_Player_Status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Struct_Player_Status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Struct_Player_Status* internal_default_instance() {
    return reinterpret_cast<const Struct_Player_Status*>(
               &_Struct_Player_Status_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Struct_Player_Status* other);
  friend void swap(Struct_Player_Status& a, Struct_Player_Status& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Struct_Player_Status* New() const PROTOBUF_FINAL { return New(NULL); }

  Struct_Player_Status* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Struct_Player_Status& from);
  void MergeFrom(const Struct_Player_Status& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Struct_Player_Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 RoleUid = 1;
  void clear_roleuid();
  static const int kRoleUidFieldNumber = 1;
  ::google::protobuf::int64 roleuid() const;
  void set_roleuid(::google::protobuf::int64 value);

  // int32 PositionX = 2;
  void clear_positionx();
  static const int kPositionXFieldNumber = 2;
  ::google::protobuf::int32 positionx() const;
  void set_positionx(::google::protobuf::int32 value);

  // int32 PositionY = 3;
  void clear_positiony();
  static const int kPositionYFieldNumber = 3;
  ::google::protobuf::int32 positiony() const;
  void set_positiony(::google::protobuf::int32 value);

  // int32 PositionZ = 4;
  void clear_positionz();
  static const int kPositionZFieldNumber = 4;
  ::google::protobuf::int32 positionz() const;
  void set_positionz(::google::protobuf::int32 value);

  // int32 Pitch = 5;
  void clear_pitch();
  static const int kPitchFieldNumber = 5;
  ::google::protobuf::int32 pitch() const;
  void set_pitch(::google::protobuf::int32 value);

  // int32 Yaw = 6;
  void clear_yaw();
  static const int kYawFieldNumber = 6;
  ::google::protobuf::int32 yaw() const;
  void set_yaw(::google::protobuf::int32 value);

  // int32 Roll = 7;
  void clear_roll();
  static const int kRollFieldNumber = 7;
  ::google::protobuf::int32 roll() const;
  void set_roll(::google::protobuf::int32 value);

  // int32 SpeedX = 8;
  void clear_speedx();
  static const int kSpeedXFieldNumber = 8;
  ::google::protobuf::int32 speedx() const;
  void set_speedx(::google::protobuf::int32 value);

  // int32 SpeedY = 9;
  void clear_speedy();
  static const int kSpeedYFieldNumber = 9;
  ::google::protobuf::int32 speedy() const;
  void set_speedy(::google::protobuf::int32 value);

  // int32 SpeedZ = 10;
  void clear_speedz();
  static const int kSpeedZFieldNumber = 10;
  ::google::protobuf::int32 speedz() const;
  void set_speedz(::google::protobuf::int32 value);

  // int32 HealthValue = 12;
  void clear_healthvalue();
  static const int kHealthValueFieldNumber = 12;
  ::google::protobuf::int32 healthvalue() const;
  void set_healthvalue(::google::protobuf::int32 value);

  // bool IsAlive = 11;
  void clear_isalive();
  static const int kIsAliveFieldNumber = 11;
  bool isalive() const;
  void set_isalive(bool value);

  // bool IsAttacking = 13;
  void clear_isattacking();
  static const int kIsAttackingFieldNumber = 13;
  bool isattacking() const;
  void set_isattacking(bool value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Struct_Player_Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 roleuid_;
  ::google::protobuf::int32 positionx_;
  ::google::protobuf::int32 positiony_;
  ::google::protobuf::int32 positionz_;
  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 yaw_;
  ::google::protobuf::int32 roll_;
  ::google::protobuf::int32 speedx_;
  ::google::protobuf::int32 speedy_;
  ::google::protobuf::int32 speedz_;
  ::google::protobuf::int32 healthvalue_;
  bool isalive_;
  bool isattacking_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsStruct_Player_StatusImpl();
};
// -------------------------------------------------------------------

class Struct_Monster_Status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Struct_Monster_Status) */ {
 public:
  Struct_Monster_Status();
  virtual ~Struct_Monster_Status();

  Struct_Monster_Status(const Struct_Monster_Status& from);

  inline Struct_Monster_Status& operator=(const Struct_Monster_Status& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Struct_Monster_Status(Struct_Monster_Status&& from) noexcept
    : Struct_Monster_Status() {
    *this = ::std::move(from);
  }

  inline Struct_Monster_Status& operator=(Struct_Monster_Status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Struct_Monster_Status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Struct_Monster_Status* internal_default_instance() {
    return reinterpret_cast<const Struct_Monster_Status*>(
               &_Struct_Monster_Status_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Struct_Monster_Status* other);
  friend void swap(Struct_Monster_Status& a, Struct_Monster_Status& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Struct_Monster_Status* New() const PROTOBUF_FINAL { return New(NULL); }

  Struct_Monster_Status* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Struct_Monster_Status& from);
  void MergeFrom(const Struct_Monster_Status& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Struct_Monster_Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 RoleUid = 1;
  void clear_roleuid();
  static const int kRoleUidFieldNumber = 1;
  ::google::protobuf::int64 roleuid() const;
  void set_roleuid(::google::protobuf::int64 value);

  // int32 PositionX = 2;
  void clear_positionx();
  static const int kPositionXFieldNumber = 2;
  ::google::protobuf::int32 positionx() const;
  void set_positionx(::google::protobuf::int32 value);

  // int32 PositionY = 3;
  void clear_positiony();
  static const int kPositionYFieldNumber = 3;
  ::google::protobuf::int32 positiony() const;
  void set_positiony(::google::protobuf::int32 value);

  // int32 PositionZ = 4;
  void clear_positionz();
  static const int kPositionZFieldNumber = 4;
  ::google::protobuf::int32 positionz() const;
  void set_positionz(::google::protobuf::int32 value);

  // int32 HealthValue = 12;
  void clear_healthvalue();
  static const int kHealthValueFieldNumber = 12;
  ::google::protobuf::int32 healthvalue() const;
  void set_healthvalue(::google::protobuf::int32 value);

  // bool IsAlive = 11;
  void clear_isalive();
  static const int kIsAliveFieldNumber = 11;
  bool isalive() const;
  void set_isalive(bool value);

  // bool IsAttacking = 13;
  void clear_isattacking();
  static const int kIsAttackingFieldNumber = 13;
  bool isattacking() const;
  void set_isattacking(bool value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Struct_Monster_Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 roleuid_;
  ::google::protobuf::int32 positionx_;
  ::google::protobuf::int32 positiony_;
  ::google::protobuf::int32 positionz_;
  ::google::protobuf::int32 healthvalue_;
  bool isalive_;
  bool isattacking_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsStruct_Monster_StatusImpl();
};
// -------------------------------------------------------------------

class Scene_EnterEnroll_Request_22000 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_EnterEnroll_Request_22000) */ {
 public:
  Scene_EnterEnroll_Request_22000();
  virtual ~Scene_EnterEnroll_Request_22000();

  Scene_EnterEnroll_Request_22000(const Scene_EnterEnroll_Request_22000& from);

  inline Scene_EnterEnroll_Request_22000& operator=(const Scene_EnterEnroll_Request_22000& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_EnterEnroll_Request_22000(Scene_EnterEnroll_Request_22000&& from) noexcept
    : Scene_EnterEnroll_Request_22000() {
    *this = ::std::move(from);
  }

  inline Scene_EnterEnroll_Request_22000& operator=(Scene_EnterEnroll_Request_22000&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_EnterEnroll_Request_22000& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_EnterEnroll_Request_22000* internal_default_instance() {
    return reinterpret_cast<const Scene_EnterEnroll_Request_22000*>(
               &_Scene_EnterEnroll_Request_22000_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Scene_EnterEnroll_Request_22000* other);
  friend void swap(Scene_EnterEnroll_Request_22000& a, Scene_EnterEnroll_Request_22000& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_EnterEnroll_Request_22000* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_EnterEnroll_Request_22000* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_EnterEnroll_Request_22000& from);
  void MergeFrom(const Scene_EnterEnroll_Request_22000& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_EnterEnroll_Request_22000* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .SceneMsg.Struct_Player_Status selfStatus = 2;
  bool has_selfstatus() const;
  void clear_selfstatus();
  static const int kSelfStatusFieldNumber = 2;
  const ::SceneMsg::Struct_Player_Status& selfstatus() const;
  ::SceneMsg::Struct_Player_Status* release_selfstatus();
  ::SceneMsg::Struct_Player_Status* mutable_selfstatus();
  void set_allocated_selfstatus(::SceneMsg::Struct_Player_Status* selfstatus);

  // int32 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // int32 RpcId = 3;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 3;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_EnterEnroll_Request_22000)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::SceneMsg::Struct_Player_Status* selfstatus_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_EnterEnroll_Request_22000Impl();
};
// -------------------------------------------------------------------

class Scene_EnterEnroll_Response_22001 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_EnterEnroll_Response_22001) */ {
 public:
  Scene_EnterEnroll_Response_22001();
  virtual ~Scene_EnterEnroll_Response_22001();

  Scene_EnterEnroll_Response_22001(const Scene_EnterEnroll_Response_22001& from);

  inline Scene_EnterEnroll_Response_22001& operator=(const Scene_EnterEnroll_Response_22001& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_EnterEnroll_Response_22001(Scene_EnterEnroll_Response_22001&& from) noexcept
    : Scene_EnterEnroll_Response_22001() {
    *this = ::std::move(from);
  }

  inline Scene_EnterEnroll_Response_22001& operator=(Scene_EnterEnroll_Response_22001&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_EnterEnroll_Response_22001& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_EnterEnroll_Response_22001* internal_default_instance() {
    return reinterpret_cast<const Scene_EnterEnroll_Response_22001*>(
               &_Scene_EnterEnroll_Response_22001_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Scene_EnterEnroll_Response_22001* other);
  friend void swap(Scene_EnterEnroll_Response_22001& a, Scene_EnterEnroll_Response_22001& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_EnterEnroll_Response_22001* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_EnterEnroll_Response_22001* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_EnterEnroll_Response_22001& from);
  void MergeFrom(const Scene_EnterEnroll_Response_22001& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_EnterEnroll_Response_22001* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SceneMsg.Struct_Player_Status playersstatus = 1;
  int playersstatus_size() const;
  void clear_playersstatus();
  static const int kPlayersstatusFieldNumber = 1;
  const ::SceneMsg::Struct_Player_Status& playersstatus(int index) const;
  ::SceneMsg::Struct_Player_Status* mutable_playersstatus(int index);
  ::SceneMsg::Struct_Player_Status* add_playersstatus();
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >*
      mutable_playersstatus();
  const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >&
      playersstatus() const;

  // repeated .SceneMsg.Struct_Monster_Status monsterstatus = 2;
  int monsterstatus_size() const;
  void clear_monsterstatus();
  static const int kMonsterstatusFieldNumber = 2;
  const ::SceneMsg::Struct_Monster_Status& monsterstatus(int index) const;
  ::SceneMsg::Struct_Monster_Status* mutable_monsterstatus(int index);
  ::SceneMsg::Struct_Monster_Status* add_monsterstatus();
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >*
      mutable_monsterstatus();
  const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >&
      monsterstatus() const;

  // string Message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 RpcId = 3;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 3;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_EnterEnroll_Response_22001)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status > playersstatus_;
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status > monsterstatus_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_EnterEnroll_Response_22001Impl();
};
// -------------------------------------------------------------------

class Scene_Player_Movement_Request_22002 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Player_Movement_Request_22002) */ {
 public:
  Scene_Player_Movement_Request_22002();
  virtual ~Scene_Player_Movement_Request_22002();

  Scene_Player_Movement_Request_22002(const Scene_Player_Movement_Request_22002& from);

  inline Scene_Player_Movement_Request_22002& operator=(const Scene_Player_Movement_Request_22002& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Player_Movement_Request_22002(Scene_Player_Movement_Request_22002&& from) noexcept
    : Scene_Player_Movement_Request_22002() {
    *this = ::std::move(from);
  }

  inline Scene_Player_Movement_Request_22002& operator=(Scene_Player_Movement_Request_22002&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Player_Movement_Request_22002& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Player_Movement_Request_22002* internal_default_instance() {
    return reinterpret_cast<const Scene_Player_Movement_Request_22002*>(
               &_Scene_Player_Movement_Request_22002_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Scene_Player_Movement_Request_22002* other);
  friend void swap(Scene_Player_Movement_Request_22002& a, Scene_Player_Movement_Request_22002& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Player_Movement_Request_22002* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Player_Movement_Request_22002* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Player_Movement_Request_22002& from);
  void MergeFrom(const Scene_Player_Movement_Request_22002& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Player_Movement_Request_22002* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .SceneMsg.Struct_Player_Status selfStatus = 2;
  bool has_selfstatus() const;
  void clear_selfstatus();
  static const int kSelfStatusFieldNumber = 2;
  const ::SceneMsg::Struct_Player_Status& selfstatus() const;
  ::SceneMsg::Struct_Player_Status* release_selfstatus();
  ::SceneMsg::Struct_Player_Status* mutable_selfstatus();
  void set_allocated_selfstatus(::SceneMsg::Struct_Player_Status* selfstatus);

  // int32 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // int32 RpcId = 3;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 3;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Player_Movement_Request_22002)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::SceneMsg::Struct_Player_Status* selfstatus_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Player_Movement_Request_22002Impl();
};
// -------------------------------------------------------------------

class Scene_Player_Movement_Response_22003 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Player_Movement_Response_22003) */ {
 public:
  Scene_Player_Movement_Response_22003();
  virtual ~Scene_Player_Movement_Response_22003();

  Scene_Player_Movement_Response_22003(const Scene_Player_Movement_Response_22003& from);

  inline Scene_Player_Movement_Response_22003& operator=(const Scene_Player_Movement_Response_22003& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Player_Movement_Response_22003(Scene_Player_Movement_Response_22003&& from) noexcept
    : Scene_Player_Movement_Response_22003() {
    *this = ::std::move(from);
  }

  inline Scene_Player_Movement_Response_22003& operator=(Scene_Player_Movement_Response_22003&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Player_Movement_Response_22003& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Player_Movement_Response_22003* internal_default_instance() {
    return reinterpret_cast<const Scene_Player_Movement_Response_22003*>(
               &_Scene_Player_Movement_Response_22003_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Scene_Player_Movement_Response_22003* other);
  friend void swap(Scene_Player_Movement_Response_22003& a, Scene_Player_Movement_Response_22003& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Player_Movement_Response_22003* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Player_Movement_Response_22003* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Player_Movement_Response_22003& from);
  void MergeFrom(const Scene_Player_Movement_Response_22003& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Player_Movement_Response_22003* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 RpcId = 1;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 1;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Player_Movement_Response_22003)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Player_Movement_Response_22003Impl();
};
// -------------------------------------------------------------------

class Scene_Brocast_player_Movement_22011 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Brocast_player_Movement_22011) */ {
 public:
  Scene_Brocast_player_Movement_22011();
  virtual ~Scene_Brocast_player_Movement_22011();

  Scene_Brocast_player_Movement_22011(const Scene_Brocast_player_Movement_22011& from);

  inline Scene_Brocast_player_Movement_22011& operator=(const Scene_Brocast_player_Movement_22011& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Brocast_player_Movement_22011(Scene_Brocast_player_Movement_22011&& from) noexcept
    : Scene_Brocast_player_Movement_22011() {
    *this = ::std::move(from);
  }

  inline Scene_Brocast_player_Movement_22011& operator=(Scene_Brocast_player_Movement_22011&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Brocast_player_Movement_22011& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Brocast_player_Movement_22011* internal_default_instance() {
    return reinterpret_cast<const Scene_Brocast_player_Movement_22011*>(
               &_Scene_Brocast_player_Movement_22011_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Scene_Brocast_player_Movement_22011* other);
  friend void swap(Scene_Brocast_player_Movement_22011& a, Scene_Brocast_player_Movement_22011& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Brocast_player_Movement_22011* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Brocast_player_Movement_22011* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Brocast_player_Movement_22011& from);
  void MergeFrom(const Scene_Brocast_player_Movement_22011& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Brocast_player_Movement_22011* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .SceneMsg.Struct_Player_Status playerNewStatus = 1;
  bool has_playernewstatus() const;
  void clear_playernewstatus();
  static const int kPlayerNewStatusFieldNumber = 1;
  const ::SceneMsg::Struct_Player_Status& playernewstatus() const;
  ::SceneMsg::Struct_Player_Status* release_playernewstatus();
  ::SceneMsg::Struct_Player_Status* mutable_playernewstatus();
  void set_allocated_playernewstatus(::SceneMsg::Struct_Player_Status* playernewstatus);

  // int32 RpcId = 2;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Brocast_player_Movement_22011)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::SceneMsg::Struct_Player_Status* playernewstatus_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Brocast_player_Movement_22011Impl();
};
// -------------------------------------------------------------------

class Scene_LeaveScene_Request_22004 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_LeaveScene_Request_22004) */ {
 public:
  Scene_LeaveScene_Request_22004();
  virtual ~Scene_LeaveScene_Request_22004();

  Scene_LeaveScene_Request_22004(const Scene_LeaveScene_Request_22004& from);

  inline Scene_LeaveScene_Request_22004& operator=(const Scene_LeaveScene_Request_22004& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_LeaveScene_Request_22004(Scene_LeaveScene_Request_22004&& from) noexcept
    : Scene_LeaveScene_Request_22004() {
    *this = ::std::move(from);
  }

  inline Scene_LeaveScene_Request_22004& operator=(Scene_LeaveScene_Request_22004&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_LeaveScene_Request_22004& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_LeaveScene_Request_22004* internal_default_instance() {
    return reinterpret_cast<const Scene_LeaveScene_Request_22004*>(
               &_Scene_LeaveScene_Request_22004_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Scene_LeaveScene_Request_22004* other);
  friend void swap(Scene_LeaveScene_Request_22004& a, Scene_LeaveScene_Request_22004& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_LeaveScene_Request_22004* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_LeaveScene_Request_22004* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_LeaveScene_Request_22004& from);
  void MergeFrom(const Scene_LeaveScene_Request_22004& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_LeaveScene_Request_22004* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // int32 RpcId = 2;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_LeaveScene_Request_22004)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_LeaveScene_Request_22004Impl();
};
// -------------------------------------------------------------------

class Scene_LeaveScene_Response_22005 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_LeaveScene_Response_22005) */ {
 public:
  Scene_LeaveScene_Response_22005();
  virtual ~Scene_LeaveScene_Response_22005();

  Scene_LeaveScene_Response_22005(const Scene_LeaveScene_Response_22005& from);

  inline Scene_LeaveScene_Response_22005& operator=(const Scene_LeaveScene_Response_22005& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_LeaveScene_Response_22005(Scene_LeaveScene_Response_22005&& from) noexcept
    : Scene_LeaveScene_Response_22005() {
    *this = ::std::move(from);
  }

  inline Scene_LeaveScene_Response_22005& operator=(Scene_LeaveScene_Response_22005&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_LeaveScene_Response_22005& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_LeaveScene_Response_22005* internal_default_instance() {
    return reinterpret_cast<const Scene_LeaveScene_Response_22005*>(
               &_Scene_LeaveScene_Response_22005_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Scene_LeaveScene_Response_22005* other);
  friend void swap(Scene_LeaveScene_Response_22005& a, Scene_LeaveScene_Response_22005& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_LeaveScene_Response_22005* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_LeaveScene_Response_22005* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_LeaveScene_Response_22005& from);
  void MergeFrom(const Scene_LeaveScene_Response_22005& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_LeaveScene_Response_22005* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 RpcId = 1;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 1;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_LeaveScene_Response_22005)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_LeaveScene_Response_22005Impl();
};
// -------------------------------------------------------------------

class Scene_Brocast_new_player_enter_22006 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Brocast_new_player_enter_22006) */ {
 public:
  Scene_Brocast_new_player_enter_22006();
  virtual ~Scene_Brocast_new_player_enter_22006();

  Scene_Brocast_new_player_enter_22006(const Scene_Brocast_new_player_enter_22006& from);

  inline Scene_Brocast_new_player_enter_22006& operator=(const Scene_Brocast_new_player_enter_22006& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Brocast_new_player_enter_22006(Scene_Brocast_new_player_enter_22006&& from) noexcept
    : Scene_Brocast_new_player_enter_22006() {
    *this = ::std::move(from);
  }

  inline Scene_Brocast_new_player_enter_22006& operator=(Scene_Brocast_new_player_enter_22006&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Brocast_new_player_enter_22006& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Brocast_new_player_enter_22006* internal_default_instance() {
    return reinterpret_cast<const Scene_Brocast_new_player_enter_22006*>(
               &_Scene_Brocast_new_player_enter_22006_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Scene_Brocast_new_player_enter_22006* other);
  friend void swap(Scene_Brocast_new_player_enter_22006& a, Scene_Brocast_new_player_enter_22006& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Brocast_new_player_enter_22006* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Brocast_new_player_enter_22006* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Brocast_new_player_enter_22006& from);
  void MergeFrom(const Scene_Brocast_new_player_enter_22006& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Brocast_new_player_enter_22006* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .SceneMsg.Struct_Player_Status newPlayerStatus = 1;
  bool has_newplayerstatus() const;
  void clear_newplayerstatus();
  static const int kNewPlayerStatusFieldNumber = 1;
  const ::SceneMsg::Struct_Player_Status& newplayerstatus() const;
  ::SceneMsg::Struct_Player_Status* release_newplayerstatus();
  ::SceneMsg::Struct_Player_Status* mutable_newplayerstatus();
  void set_allocated_newplayerstatus(::SceneMsg::Struct_Player_Status* newplayerstatus);

  // int32 RpcId = 2;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Brocast_new_player_enter_22006)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::SceneMsg::Struct_Player_Status* newplayerstatus_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Brocast_new_player_enter_22006Impl();
};
// -------------------------------------------------------------------

class Scene_Brocast_player_leave_22007 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Brocast_player_leave_22007) */ {
 public:
  Scene_Brocast_player_leave_22007();
  virtual ~Scene_Brocast_player_leave_22007();

  Scene_Brocast_player_leave_22007(const Scene_Brocast_player_leave_22007& from);

  inline Scene_Brocast_player_leave_22007& operator=(const Scene_Brocast_player_leave_22007& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Brocast_player_leave_22007(Scene_Brocast_player_leave_22007&& from) noexcept
    : Scene_Brocast_player_leave_22007() {
    *this = ::std::move(from);
  }

  inline Scene_Brocast_player_leave_22007& operator=(Scene_Brocast_player_leave_22007&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Brocast_player_leave_22007& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Brocast_player_leave_22007* internal_default_instance() {
    return reinterpret_cast<const Scene_Brocast_player_leave_22007*>(
               &_Scene_Brocast_player_leave_22007_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Scene_Brocast_player_leave_22007* other);
  friend void swap(Scene_Brocast_player_leave_22007& a, Scene_Brocast_player_leave_22007& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Brocast_player_leave_22007* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Brocast_player_leave_22007* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Brocast_player_leave_22007& from);
  void MergeFrom(const Scene_Brocast_player_leave_22007& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Brocast_player_leave_22007* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // int32 RpcId = 2;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 2;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Brocast_player_leave_22007)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Brocast_player_leave_22007Impl();
};
// -------------------------------------------------------------------

class Player_Hit_Monster_Request_22008 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Player_Hit_Monster_Request_22008) */ {
 public:
  Player_Hit_Monster_Request_22008();
  virtual ~Player_Hit_Monster_Request_22008();

  Player_Hit_Monster_Request_22008(const Player_Hit_Monster_Request_22008& from);

  inline Player_Hit_Monster_Request_22008& operator=(const Player_Hit_Monster_Request_22008& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Player_Hit_Monster_Request_22008(Player_Hit_Monster_Request_22008&& from) noexcept
    : Player_Hit_Monster_Request_22008() {
    *this = ::std::move(from);
  }

  inline Player_Hit_Monster_Request_22008& operator=(Player_Hit_Monster_Request_22008&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_Hit_Monster_Request_22008& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Player_Hit_Monster_Request_22008* internal_default_instance() {
    return reinterpret_cast<const Player_Hit_Monster_Request_22008*>(
               &_Player_Hit_Monster_Request_22008_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Player_Hit_Monster_Request_22008* other);
  friend void swap(Player_Hit_Monster_Request_22008& a, Player_Hit_Monster_Request_22008& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Player_Hit_Monster_Request_22008* New() const PROTOBUF_FINAL { return New(NULL); }

  Player_Hit_Monster_Request_22008* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Player_Hit_Monster_Request_22008& from);
  void MergeFrom(const Player_Hit_Monster_Request_22008& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Player_Hit_Monster_Request_22008* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int64 monsterUUID = 2;
  void clear_monsteruuid();
  static const int kMonsterUUIDFieldNumber = 2;
  ::google::protobuf::int64 monsteruuid() const;
  void set_monsteruuid(::google::protobuf::int64 value);

  // int32 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // int32 RpcId = 3;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 3;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Player_Hit_Monster_Request_22008)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 monsteruuid_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsPlayer_Hit_Monster_Request_22008Impl();
};
// -------------------------------------------------------------------

class Player_Hit_Monster_Response_22009 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Player_Hit_Monster_Response_22009) */ {
 public:
  Player_Hit_Monster_Response_22009();
  virtual ~Player_Hit_Monster_Response_22009();

  Player_Hit_Monster_Response_22009(const Player_Hit_Monster_Response_22009& from);

  inline Player_Hit_Monster_Response_22009& operator=(const Player_Hit_Monster_Response_22009& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Player_Hit_Monster_Response_22009(Player_Hit_Monster_Response_22009&& from) noexcept
    : Player_Hit_Monster_Response_22009() {
    *this = ::std::move(from);
  }

  inline Player_Hit_Monster_Response_22009& operator=(Player_Hit_Monster_Response_22009&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_Hit_Monster_Response_22009& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Player_Hit_Monster_Response_22009* internal_default_instance() {
    return reinterpret_cast<const Player_Hit_Monster_Response_22009*>(
               &_Player_Hit_Monster_Response_22009_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Player_Hit_Monster_Response_22009* other);
  friend void swap(Player_Hit_Monster_Response_22009& a, Player_Hit_Monster_Response_22009& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Player_Hit_Monster_Response_22009* New() const PROTOBUF_FINAL { return New(NULL); }

  Player_Hit_Monster_Response_22009* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Player_Hit_Monster_Response_22009& from);
  void MergeFrom(const Player_Hit_Monster_Response_22009& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Player_Hit_Monster_Response_22009* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 RpcId = 1;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 1;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Player_Hit_Monster_Response_22009)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsPlayer_Hit_Monster_Response_22009Impl();
};
// -------------------------------------------------------------------

class Scene_Brocast_Player_Attack_Monster_22010 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010) */ {
 public:
  Scene_Brocast_Player_Attack_Monster_22010();
  virtual ~Scene_Brocast_Player_Attack_Monster_22010();

  Scene_Brocast_Player_Attack_Monster_22010(const Scene_Brocast_Player_Attack_Monster_22010& from);

  inline Scene_Brocast_Player_Attack_Monster_22010& operator=(const Scene_Brocast_Player_Attack_Monster_22010& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Brocast_Player_Attack_Monster_22010(Scene_Brocast_Player_Attack_Monster_22010&& from) noexcept
    : Scene_Brocast_Player_Attack_Monster_22010() {
    *this = ::std::move(from);
  }

  inline Scene_Brocast_Player_Attack_Monster_22010& operator=(Scene_Brocast_Player_Attack_Monster_22010&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Brocast_Player_Attack_Monster_22010& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Brocast_Player_Attack_Monster_22010* internal_default_instance() {
    return reinterpret_cast<const Scene_Brocast_Player_Attack_Monster_22010*>(
               &_Scene_Brocast_Player_Attack_Monster_22010_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Scene_Brocast_Player_Attack_Monster_22010* other);
  friend void swap(Scene_Brocast_Player_Attack_Monster_22010& a, Scene_Brocast_Player_Attack_Monster_22010& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Brocast_Player_Attack_Monster_22010* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Brocast_Player_Attack_Monster_22010* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Brocast_Player_Attack_Monster_22010& from);
  void MergeFrom(const Scene_Brocast_Player_Attack_Monster_22010& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Brocast_Player_Attack_Monster_22010* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int64 attackerUUID = 1;
  void clear_attackeruuid();
  static const int kAttackerUUIDFieldNumber = 1;
  ::google::protobuf::int64 attackeruuid() const;
  void set_attackeruuid(::google::protobuf::int64 value);

  // int64 hurtedUUID = 2;
  void clear_hurteduuid();
  static const int kHurtedUUIDFieldNumber = 2;
  ::google::protobuf::int64 hurteduuid() const;
  void set_hurteduuid(::google::protobuf::int64 value);

  // int32 RpcId = 3;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 3;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 attackeruuid_;
  ::google::protobuf::int64 hurteduuid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Brocast_Player_Attack_Monster_22010Impl();
};
// -------------------------------------------------------------------

class Scene_Notify_Self_Other_Entity_Enter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Notify_Self_Other_Entity_Enter) */ {
 public:
  Scene_Notify_Self_Other_Entity_Enter();
  virtual ~Scene_Notify_Self_Other_Entity_Enter();

  Scene_Notify_Self_Other_Entity_Enter(const Scene_Notify_Self_Other_Entity_Enter& from);

  inline Scene_Notify_Self_Other_Entity_Enter& operator=(const Scene_Notify_Self_Other_Entity_Enter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Notify_Self_Other_Entity_Enter(Scene_Notify_Self_Other_Entity_Enter&& from) noexcept
    : Scene_Notify_Self_Other_Entity_Enter() {
    *this = ::std::move(from);
  }

  inline Scene_Notify_Self_Other_Entity_Enter& operator=(Scene_Notify_Self_Other_Entity_Enter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Notify_Self_Other_Entity_Enter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Notify_Self_Other_Entity_Enter* internal_default_instance() {
    return reinterpret_cast<const Scene_Notify_Self_Other_Entity_Enter*>(
               &_Scene_Notify_Self_Other_Entity_Enter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Scene_Notify_Self_Other_Entity_Enter* other);
  friend void swap(Scene_Notify_Self_Other_Entity_Enter& a, Scene_Notify_Self_Other_Entity_Enter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Notify_Self_Other_Entity_Enter* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Notify_Self_Other_Entity_Enter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Notify_Self_Other_Entity_Enter& from);
  void MergeFrom(const Scene_Notify_Self_Other_Entity_Enter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Notify_Self_Other_Entity_Enter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SceneMsg.Struct_Player_Status playersstatus = 1;
  int playersstatus_size() const;
  void clear_playersstatus();
  static const int kPlayersstatusFieldNumber = 1;
  const ::SceneMsg::Struct_Player_Status& playersstatus(int index) const;
  ::SceneMsg::Struct_Player_Status* mutable_playersstatus(int index);
  ::SceneMsg::Struct_Player_Status* add_playersstatus();
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >*
      mutable_playersstatus();
  const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >&
      playersstatus() const;

  // repeated .SceneMsg.Struct_Monster_Status monsterstatus = 2;
  int monsterstatus_size() const;
  void clear_monsterstatus();
  static const int kMonsterstatusFieldNumber = 2;
  const ::SceneMsg::Struct_Monster_Status& monsterstatus(int index) const;
  ::SceneMsg::Struct_Monster_Status* mutable_monsterstatus(int index);
  ::SceneMsg::Struct_Monster_Status* add_monsterstatus();
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >*
      mutable_monsterstatus();
  const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >&
      monsterstatus() const;

  // string Message = 91;
  void clear_message();
  static const int kMessageFieldNumber = 91;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 92;
  void clear_error();
  static const int kErrorFieldNumber = 92;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Notify_Self_Other_Entity_Enter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status > playersstatus_;
  ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status > monsterstatus_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Notify_Self_Other_Entity_EnterImpl();
};
// -------------------------------------------------------------------

class Scene_Notify_Self_Other_Entity_Leave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SceneMsg.Scene_Notify_Self_Other_Entity_Leave) */ {
 public:
  Scene_Notify_Self_Other_Entity_Leave();
  virtual ~Scene_Notify_Self_Other_Entity_Leave();

  Scene_Notify_Self_Other_Entity_Leave(const Scene_Notify_Self_Other_Entity_Leave& from);

  inline Scene_Notify_Self_Other_Entity_Leave& operator=(const Scene_Notify_Self_Other_Entity_Leave& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scene_Notify_Self_Other_Entity_Leave(Scene_Notify_Self_Other_Entity_Leave&& from) noexcept
    : Scene_Notify_Self_Other_Entity_Leave() {
    *this = ::std::move(from);
  }

  inline Scene_Notify_Self_Other_Entity_Leave& operator=(Scene_Notify_Self_Other_Entity_Leave&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scene_Notify_Self_Other_Entity_Leave& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scene_Notify_Self_Other_Entity_Leave* internal_default_instance() {
    return reinterpret_cast<const Scene_Notify_Self_Other_Entity_Leave*>(
               &_Scene_Notify_Self_Other_Entity_Leave_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Scene_Notify_Self_Other_Entity_Leave* other);
  friend void swap(Scene_Notify_Self_Other_Entity_Leave& a, Scene_Notify_Self_Other_Entity_Leave& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scene_Notify_Self_Other_Entity_Leave* New() const PROTOBUF_FINAL { return New(NULL); }

  Scene_Notify_Self_Other_Entity_Leave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Scene_Notify_Self_Other_Entity_Leave& from);
  void MergeFrom(const Scene_Notify_Self_Other_Entity_Leave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Scene_Notify_Self_Other_Entity_Leave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 leaveduuid = 1;
  int leaveduuid_size() const;
  void clear_leaveduuid();
  static const int kLeaveduuidFieldNumber = 1;
  ::google::protobuf::int64 leaveduuid(int index) const;
  void set_leaveduuid(int index, ::google::protobuf::int64 value);
  void add_leaveduuid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      leaveduuid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_leaveduuid();

  // string Message = 91;
  void clear_message();
  static const int kMessageFieldNumber = 91;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // int32 Error = 92;
  void clear_error();
  static const int kErrorFieldNumber = 92;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SceneMsg.Scene_Notify_Self_Other_Entity_Leave)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > leaveduuid_;
  mutable int _leaveduuid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsScene_Notify_Self_Other_Entity_LeaveImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Struct_Player_Status

// int64 RoleUid = 1;
inline void Struct_Player_Status::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Struct_Player_Status::roleuid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.RoleUid)
  return roleuid_;
}
inline void Struct_Player_Status::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.RoleUid)
}

// int32 PositionX = 2;
inline void Struct_Player_Status::clear_positionx() {
  positionx_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::positionx() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.PositionX)
  return positionx_;
}
inline void Struct_Player_Status::set_positionx(::google::protobuf::int32 value) {
  
  positionx_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.PositionX)
}

// int32 PositionY = 3;
inline void Struct_Player_Status::clear_positiony() {
  positiony_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::positiony() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.PositionY)
  return positiony_;
}
inline void Struct_Player_Status::set_positiony(::google::protobuf::int32 value) {
  
  positiony_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.PositionY)
}

// int32 PositionZ = 4;
inline void Struct_Player_Status::clear_positionz() {
  positionz_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::positionz() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.PositionZ)
  return positionz_;
}
inline void Struct_Player_Status::set_positionz(::google::protobuf::int32 value) {
  
  positionz_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.PositionZ)
}

// int32 Pitch = 5;
inline void Struct_Player_Status::clear_pitch() {
  pitch_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::pitch() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.Pitch)
  return pitch_;
}
inline void Struct_Player_Status::set_pitch(::google::protobuf::int32 value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.Pitch)
}

// int32 Yaw = 6;
inline void Struct_Player_Status::clear_yaw() {
  yaw_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::yaw() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.Yaw)
  return yaw_;
}
inline void Struct_Player_Status::set_yaw(::google::protobuf::int32 value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.Yaw)
}

// int32 Roll = 7;
inline void Struct_Player_Status::clear_roll() {
  roll_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::roll() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.Roll)
  return roll_;
}
inline void Struct_Player_Status::set_roll(::google::protobuf::int32 value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.Roll)
}

// int32 SpeedX = 8;
inline void Struct_Player_Status::clear_speedx() {
  speedx_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::speedx() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.SpeedX)
  return speedx_;
}
inline void Struct_Player_Status::set_speedx(::google::protobuf::int32 value) {
  
  speedx_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.SpeedX)
}

// int32 SpeedY = 9;
inline void Struct_Player_Status::clear_speedy() {
  speedy_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::speedy() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.SpeedY)
  return speedy_;
}
inline void Struct_Player_Status::set_speedy(::google::protobuf::int32 value) {
  
  speedy_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.SpeedY)
}

// int32 SpeedZ = 10;
inline void Struct_Player_Status::clear_speedz() {
  speedz_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::speedz() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.SpeedZ)
  return speedz_;
}
inline void Struct_Player_Status::set_speedz(::google::protobuf::int32 value) {
  
  speedz_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.SpeedZ)
}

// bool IsAlive = 11;
inline void Struct_Player_Status::clear_isalive() {
  isalive_ = false;
}
inline bool Struct_Player_Status::isalive() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.IsAlive)
  return isalive_;
}
inline void Struct_Player_Status::set_isalive(bool value) {
  
  isalive_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.IsAlive)
}

// int32 HealthValue = 12;
inline void Struct_Player_Status::clear_healthvalue() {
  healthvalue_ = 0;
}
inline ::google::protobuf::int32 Struct_Player_Status::healthvalue() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.HealthValue)
  return healthvalue_;
}
inline void Struct_Player_Status::set_healthvalue(::google::protobuf::int32 value) {
  
  healthvalue_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.HealthValue)
}

// bool IsAttacking = 13;
inline void Struct_Player_Status::clear_isattacking() {
  isattacking_ = false;
}
inline bool Struct_Player_Status::isattacking() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Player_Status.IsAttacking)
  return isattacking_;
}
inline void Struct_Player_Status::set_isattacking(bool value) {
  
  isattacking_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Player_Status.IsAttacking)
}

// -------------------------------------------------------------------

// Struct_Monster_Status

// int64 RoleUid = 1;
inline void Struct_Monster_Status::clear_roleuid() {
  roleuid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Struct_Monster_Status::roleuid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.RoleUid)
  return roleuid_;
}
inline void Struct_Monster_Status::set_roleuid(::google::protobuf::int64 value) {
  
  roleuid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.RoleUid)
}

// int32 PositionX = 2;
inline void Struct_Monster_Status::clear_positionx() {
  positionx_ = 0;
}
inline ::google::protobuf::int32 Struct_Monster_Status::positionx() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.PositionX)
  return positionx_;
}
inline void Struct_Monster_Status::set_positionx(::google::protobuf::int32 value) {
  
  positionx_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.PositionX)
}

// int32 PositionY = 3;
inline void Struct_Monster_Status::clear_positiony() {
  positiony_ = 0;
}
inline ::google::protobuf::int32 Struct_Monster_Status::positiony() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.PositionY)
  return positiony_;
}
inline void Struct_Monster_Status::set_positiony(::google::protobuf::int32 value) {
  
  positiony_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.PositionY)
}

// int32 PositionZ = 4;
inline void Struct_Monster_Status::clear_positionz() {
  positionz_ = 0;
}
inline ::google::protobuf::int32 Struct_Monster_Status::positionz() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.PositionZ)
  return positionz_;
}
inline void Struct_Monster_Status::set_positionz(::google::protobuf::int32 value) {
  
  positionz_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.PositionZ)
}

// bool IsAlive = 11;
inline void Struct_Monster_Status::clear_isalive() {
  isalive_ = false;
}
inline bool Struct_Monster_Status::isalive() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.IsAlive)
  return isalive_;
}
inline void Struct_Monster_Status::set_isalive(bool value) {
  
  isalive_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.IsAlive)
}

// int32 HealthValue = 12;
inline void Struct_Monster_Status::clear_healthvalue() {
  healthvalue_ = 0;
}
inline ::google::protobuf::int32 Struct_Monster_Status::healthvalue() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.HealthValue)
  return healthvalue_;
}
inline void Struct_Monster_Status::set_healthvalue(::google::protobuf::int32 value) {
  
  healthvalue_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.HealthValue)
}

// bool IsAttacking = 13;
inline void Struct_Monster_Status::clear_isattacking() {
  isattacking_ = false;
}
inline bool Struct_Monster_Status::isattacking() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Struct_Monster_Status.IsAttacking)
  return isattacking_;
}
inline void Struct_Monster_Status::set_isattacking(bool value) {
  
  isattacking_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Struct_Monster_Status.IsAttacking)
}

// -------------------------------------------------------------------

// Scene_EnterEnroll_Request_22000

// int32 sessionID = 1;
inline void Scene_EnterEnroll_Request_22000::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 Scene_EnterEnroll_Request_22000::sessionid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Request_22000.sessionID)
  return sessionid_;
}
inline void Scene_EnterEnroll_Request_22000::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Request_22000.sessionID)
}

// .SceneMsg.Struct_Player_Status selfStatus = 2;
inline bool Scene_EnterEnroll_Request_22000::has_selfstatus() const {
  return this != internal_default_instance() && selfstatus_ != NULL;
}
inline void Scene_EnterEnroll_Request_22000::clear_selfstatus() {
  if (GetArenaNoVirtual() == NULL && selfstatus_ != NULL) {
    delete selfstatus_;
  }
  selfstatus_ = NULL;
}
inline const ::SceneMsg::Struct_Player_Status& Scene_EnterEnroll_Request_22000::selfstatus() const {
  const ::SceneMsg::Struct_Player_Status* p = selfstatus_;
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Request_22000.selfStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::SceneMsg::Struct_Player_Status*>(
      &::SceneMsg::_Struct_Player_Status_default_instance_);
}
inline ::SceneMsg::Struct_Player_Status* Scene_EnterEnroll_Request_22000::release_selfstatus() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_EnterEnroll_Request_22000.selfStatus)
  
  ::SceneMsg::Struct_Player_Status* temp = selfstatus_;
  selfstatus_ = NULL;
  return temp;
}
inline ::SceneMsg::Struct_Player_Status* Scene_EnterEnroll_Request_22000::mutable_selfstatus() {
  
  if (selfstatus_ == NULL) {
    selfstatus_ = new ::SceneMsg::Struct_Player_Status;
  }
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_EnterEnroll_Request_22000.selfStatus)
  return selfstatus_;
}
inline void Scene_EnterEnroll_Request_22000::set_allocated_selfstatus(::SceneMsg::Struct_Player_Status* selfstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selfstatus_;
  }
  if (selfstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selfstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selfstatus, submessage_arena);
    }
    
  } else {
    
  }
  selfstatus_ = selfstatus;
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_EnterEnroll_Request_22000.selfStatus)
}

// int32 RpcId = 3;
inline void Scene_EnterEnroll_Request_22000::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_EnterEnroll_Request_22000::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Request_22000.RpcId)
  return rpcid_;
}
inline void Scene_EnterEnroll_Request_22000::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Request_22000.RpcId)
}

// string Message = 4;
inline void Scene_EnterEnroll_Request_22000::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_EnterEnroll_Request_22000::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
  return message_.GetNoArena();
}
inline void Scene_EnterEnroll_Request_22000::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
}
#if LANG_CXX11
inline void Scene_EnterEnroll_Request_22000::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
}
#endif
inline void Scene_EnterEnroll_Request_22000::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
}
inline void Scene_EnterEnroll_Request_22000::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
}
inline ::std::string* Scene_EnterEnroll_Request_22000::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_EnterEnroll_Request_22000::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_EnterEnroll_Request_22000::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_EnterEnroll_Request_22000.Message)
}

// int32 Error = 5;
inline void Scene_EnterEnroll_Request_22000::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_EnterEnroll_Request_22000::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Request_22000.Error)
  return error_;
}
inline void Scene_EnterEnroll_Request_22000::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Request_22000.Error)
}

// -------------------------------------------------------------------

// Scene_EnterEnroll_Response_22001

// repeated .SceneMsg.Struct_Player_Status playersstatus = 1;
inline int Scene_EnterEnroll_Response_22001::playersstatus_size() const {
  return playersstatus_.size();
}
inline void Scene_EnterEnroll_Response_22001::clear_playersstatus() {
  playersstatus_.Clear();
}
inline const ::SceneMsg::Struct_Player_Status& Scene_EnterEnroll_Response_22001::playersstatus(int index) const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Response_22001.playersstatus)
  return playersstatus_.Get(index);
}
inline ::SceneMsg::Struct_Player_Status* Scene_EnterEnroll_Response_22001::mutable_playersstatus(int index) {
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_EnterEnroll_Response_22001.playersstatus)
  return playersstatus_.Mutable(index);
}
inline ::SceneMsg::Struct_Player_Status* Scene_EnterEnroll_Response_22001::add_playersstatus() {
  // @@protoc_insertion_point(field_add:SceneMsg.Scene_EnterEnroll_Response_22001.playersstatus)
  return playersstatus_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >*
Scene_EnterEnroll_Response_22001::mutable_playersstatus() {
  // @@protoc_insertion_point(field_mutable_list:SceneMsg.Scene_EnterEnroll_Response_22001.playersstatus)
  return &playersstatus_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >&
Scene_EnterEnroll_Response_22001::playersstatus() const {
  // @@protoc_insertion_point(field_list:SceneMsg.Scene_EnterEnroll_Response_22001.playersstatus)
  return playersstatus_;
}

// repeated .SceneMsg.Struct_Monster_Status monsterstatus = 2;
inline int Scene_EnterEnroll_Response_22001::monsterstatus_size() const {
  return monsterstatus_.size();
}
inline void Scene_EnterEnroll_Response_22001::clear_monsterstatus() {
  monsterstatus_.Clear();
}
inline const ::SceneMsg::Struct_Monster_Status& Scene_EnterEnroll_Response_22001::monsterstatus(int index) const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Response_22001.monsterstatus)
  return monsterstatus_.Get(index);
}
inline ::SceneMsg::Struct_Monster_Status* Scene_EnterEnroll_Response_22001::mutable_monsterstatus(int index) {
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_EnterEnroll_Response_22001.monsterstatus)
  return monsterstatus_.Mutable(index);
}
inline ::SceneMsg::Struct_Monster_Status* Scene_EnterEnroll_Response_22001::add_monsterstatus() {
  // @@protoc_insertion_point(field_add:SceneMsg.Scene_EnterEnroll_Response_22001.monsterstatus)
  return monsterstatus_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >*
Scene_EnterEnroll_Response_22001::mutable_monsterstatus() {
  // @@protoc_insertion_point(field_mutable_list:SceneMsg.Scene_EnterEnroll_Response_22001.monsterstatus)
  return &monsterstatus_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >&
Scene_EnterEnroll_Response_22001::monsterstatus() const {
  // @@protoc_insertion_point(field_list:SceneMsg.Scene_EnterEnroll_Response_22001.monsterstatus)
  return monsterstatus_;
}

// int32 RpcId = 3;
inline void Scene_EnterEnroll_Response_22001::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_EnterEnroll_Response_22001::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Response_22001.RpcId)
  return rpcid_;
}
inline void Scene_EnterEnroll_Response_22001::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Response_22001.RpcId)
}

// string Message = 4;
inline void Scene_EnterEnroll_Response_22001::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_EnterEnroll_Response_22001::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
  return message_.GetNoArena();
}
inline void Scene_EnterEnroll_Response_22001::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
}
#if LANG_CXX11
inline void Scene_EnterEnroll_Response_22001::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
}
#endif
inline void Scene_EnterEnroll_Response_22001::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
}
inline void Scene_EnterEnroll_Response_22001::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
}
inline ::std::string* Scene_EnterEnroll_Response_22001::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_EnterEnroll_Response_22001::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_EnterEnroll_Response_22001::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_EnterEnroll_Response_22001.Message)
}

// int32 Error = 5;
inline void Scene_EnterEnroll_Response_22001::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_EnterEnroll_Response_22001::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_EnterEnroll_Response_22001.Error)
  return error_;
}
inline void Scene_EnterEnroll_Response_22001::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_EnterEnroll_Response_22001.Error)
}

// -------------------------------------------------------------------

// Scene_Player_Movement_Request_22002

// int32 sessionID = 1;
inline void Scene_Player_Movement_Request_22002::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 Scene_Player_Movement_Request_22002::sessionid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Request_22002.sessionID)
  return sessionid_;
}
inline void Scene_Player_Movement_Request_22002::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Request_22002.sessionID)
}

// .SceneMsg.Struct_Player_Status selfStatus = 2;
inline bool Scene_Player_Movement_Request_22002::has_selfstatus() const {
  return this != internal_default_instance() && selfstatus_ != NULL;
}
inline void Scene_Player_Movement_Request_22002::clear_selfstatus() {
  if (GetArenaNoVirtual() == NULL && selfstatus_ != NULL) {
    delete selfstatus_;
  }
  selfstatus_ = NULL;
}
inline const ::SceneMsg::Struct_Player_Status& Scene_Player_Movement_Request_22002::selfstatus() const {
  const ::SceneMsg::Struct_Player_Status* p = selfstatus_;
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Request_22002.selfStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::SceneMsg::Struct_Player_Status*>(
      &::SceneMsg::_Struct_Player_Status_default_instance_);
}
inline ::SceneMsg::Struct_Player_Status* Scene_Player_Movement_Request_22002::release_selfstatus() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Player_Movement_Request_22002.selfStatus)
  
  ::SceneMsg::Struct_Player_Status* temp = selfstatus_;
  selfstatus_ = NULL;
  return temp;
}
inline ::SceneMsg::Struct_Player_Status* Scene_Player_Movement_Request_22002::mutable_selfstatus() {
  
  if (selfstatus_ == NULL) {
    selfstatus_ = new ::SceneMsg::Struct_Player_Status;
  }
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Player_Movement_Request_22002.selfStatus)
  return selfstatus_;
}
inline void Scene_Player_Movement_Request_22002::set_allocated_selfstatus(::SceneMsg::Struct_Player_Status* selfstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selfstatus_;
  }
  if (selfstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selfstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selfstatus, submessage_arena);
    }
    
  } else {
    
  }
  selfstatus_ = selfstatus;
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Player_Movement_Request_22002.selfStatus)
}

// int32 RpcId = 3;
inline void Scene_Player_Movement_Request_22002::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Player_Movement_Request_22002::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Request_22002.RpcId)
  return rpcid_;
}
inline void Scene_Player_Movement_Request_22002::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Request_22002.RpcId)
}

// string Message = 4;
inline void Scene_Player_Movement_Request_22002::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Player_Movement_Request_22002::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Request_22002.Message)
  return message_.GetNoArena();
}
inline void Scene_Player_Movement_Request_22002::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Request_22002.Message)
}
#if LANG_CXX11
inline void Scene_Player_Movement_Request_22002::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Player_Movement_Request_22002.Message)
}
#endif
inline void Scene_Player_Movement_Request_22002::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Player_Movement_Request_22002.Message)
}
inline void Scene_Player_Movement_Request_22002::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Player_Movement_Request_22002.Message)
}
inline ::std::string* Scene_Player_Movement_Request_22002::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Player_Movement_Request_22002.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Player_Movement_Request_22002::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Player_Movement_Request_22002.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Player_Movement_Request_22002::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Player_Movement_Request_22002.Message)
}

// int32 Error = 5;
inline void Scene_Player_Movement_Request_22002::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Player_Movement_Request_22002::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Request_22002.Error)
  return error_;
}
inline void Scene_Player_Movement_Request_22002::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Request_22002.Error)
}

// -------------------------------------------------------------------

// Scene_Player_Movement_Response_22003

// int32 RpcId = 1;
inline void Scene_Player_Movement_Response_22003::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Player_Movement_Response_22003::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Response_22003.RpcId)
  return rpcid_;
}
inline void Scene_Player_Movement_Response_22003::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Response_22003.RpcId)
}

// string Message = 2;
inline void Scene_Player_Movement_Response_22003::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Player_Movement_Response_22003::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Response_22003.Message)
  return message_.GetNoArena();
}
inline void Scene_Player_Movement_Response_22003::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Response_22003.Message)
}
#if LANG_CXX11
inline void Scene_Player_Movement_Response_22003::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Player_Movement_Response_22003.Message)
}
#endif
inline void Scene_Player_Movement_Response_22003::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Player_Movement_Response_22003.Message)
}
inline void Scene_Player_Movement_Response_22003::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Player_Movement_Response_22003.Message)
}
inline ::std::string* Scene_Player_Movement_Response_22003::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Player_Movement_Response_22003.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Player_Movement_Response_22003::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Player_Movement_Response_22003.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Player_Movement_Response_22003::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Player_Movement_Response_22003.Message)
}

// int32 Error = 3;
inline void Scene_Player_Movement_Response_22003::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Player_Movement_Response_22003::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Player_Movement_Response_22003.Error)
  return error_;
}
inline void Scene_Player_Movement_Response_22003::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Player_Movement_Response_22003.Error)
}

// -------------------------------------------------------------------

// Scene_Brocast_player_Movement_22011

// .SceneMsg.Struct_Player_Status playerNewStatus = 1;
inline bool Scene_Brocast_player_Movement_22011::has_playernewstatus() const {
  return this != internal_default_instance() && playernewstatus_ != NULL;
}
inline void Scene_Brocast_player_Movement_22011::clear_playernewstatus() {
  if (GetArenaNoVirtual() == NULL && playernewstatus_ != NULL) {
    delete playernewstatus_;
  }
  playernewstatus_ = NULL;
}
inline const ::SceneMsg::Struct_Player_Status& Scene_Brocast_player_Movement_22011::playernewstatus() const {
  const ::SceneMsg::Struct_Player_Status* p = playernewstatus_;
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_Movement_22011.playerNewStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::SceneMsg::Struct_Player_Status*>(
      &::SceneMsg::_Struct_Player_Status_default_instance_);
}
inline ::SceneMsg::Struct_Player_Status* Scene_Brocast_player_Movement_22011::release_playernewstatus() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Brocast_player_Movement_22011.playerNewStatus)
  
  ::SceneMsg::Struct_Player_Status* temp = playernewstatus_;
  playernewstatus_ = NULL;
  return temp;
}
inline ::SceneMsg::Struct_Player_Status* Scene_Brocast_player_Movement_22011::mutable_playernewstatus() {
  
  if (playernewstatus_ == NULL) {
    playernewstatus_ = new ::SceneMsg::Struct_Player_Status;
  }
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Brocast_player_Movement_22011.playerNewStatus)
  return playernewstatus_;
}
inline void Scene_Brocast_player_Movement_22011::set_allocated_playernewstatus(::SceneMsg::Struct_Player_Status* playernewstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete playernewstatus_;
  }
  if (playernewstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playernewstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playernewstatus, submessage_arena);
    }
    
  } else {
    
  }
  playernewstatus_ = playernewstatus;
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Brocast_player_Movement_22011.playerNewStatus)
}

// int32 RpcId = 2;
inline void Scene_Brocast_player_Movement_22011::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_player_Movement_22011::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_Movement_22011.RpcId)
  return rpcid_;
}
inline void Scene_Brocast_player_Movement_22011::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_Movement_22011.RpcId)
}

// string Message = 3;
inline void Scene_Brocast_player_Movement_22011::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Brocast_player_Movement_22011::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
  return message_.GetNoArena();
}
inline void Scene_Brocast_player_Movement_22011::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
}
#if LANG_CXX11
inline void Scene_Brocast_player_Movement_22011::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
}
#endif
inline void Scene_Brocast_player_Movement_22011::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
}
inline void Scene_Brocast_player_Movement_22011::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
}
inline ::std::string* Scene_Brocast_player_Movement_22011::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Brocast_player_Movement_22011::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Brocast_player_Movement_22011::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Brocast_player_Movement_22011.Message)
}

// int32 Error = 4;
inline void Scene_Brocast_player_Movement_22011::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_player_Movement_22011::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_Movement_22011.Error)
  return error_;
}
inline void Scene_Brocast_player_Movement_22011::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_Movement_22011.Error)
}

// -------------------------------------------------------------------

// Scene_LeaveScene_Request_22004

// int32 sessionID = 1;
inline void Scene_LeaveScene_Request_22004::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 Scene_LeaveScene_Request_22004::sessionid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Request_22004.sessionID)
  return sessionid_;
}
inline void Scene_LeaveScene_Request_22004::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Request_22004.sessionID)
}

// int32 RpcId = 2;
inline void Scene_LeaveScene_Request_22004::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_LeaveScene_Request_22004::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Request_22004.RpcId)
  return rpcid_;
}
inline void Scene_LeaveScene_Request_22004::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Request_22004.RpcId)
}

// string Message = 3;
inline void Scene_LeaveScene_Request_22004::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_LeaveScene_Request_22004::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Request_22004.Message)
  return message_.GetNoArena();
}
inline void Scene_LeaveScene_Request_22004::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Request_22004.Message)
}
#if LANG_CXX11
inline void Scene_LeaveScene_Request_22004::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_LeaveScene_Request_22004.Message)
}
#endif
inline void Scene_LeaveScene_Request_22004::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_LeaveScene_Request_22004.Message)
}
inline void Scene_LeaveScene_Request_22004::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_LeaveScene_Request_22004.Message)
}
inline ::std::string* Scene_LeaveScene_Request_22004::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_LeaveScene_Request_22004.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_LeaveScene_Request_22004::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_LeaveScene_Request_22004.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_LeaveScene_Request_22004::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_LeaveScene_Request_22004.Message)
}

// int32 Error = 4;
inline void Scene_LeaveScene_Request_22004::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_LeaveScene_Request_22004::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Request_22004.Error)
  return error_;
}
inline void Scene_LeaveScene_Request_22004::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Request_22004.Error)
}

// -------------------------------------------------------------------

// Scene_LeaveScene_Response_22005

// int32 RpcId = 1;
inline void Scene_LeaveScene_Response_22005::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_LeaveScene_Response_22005::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Response_22005.RpcId)
  return rpcid_;
}
inline void Scene_LeaveScene_Response_22005::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Response_22005.RpcId)
}

// string Message = 2;
inline void Scene_LeaveScene_Response_22005::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_LeaveScene_Response_22005::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Response_22005.Message)
  return message_.GetNoArena();
}
inline void Scene_LeaveScene_Response_22005::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Response_22005.Message)
}
#if LANG_CXX11
inline void Scene_LeaveScene_Response_22005::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_LeaveScene_Response_22005.Message)
}
#endif
inline void Scene_LeaveScene_Response_22005::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_LeaveScene_Response_22005.Message)
}
inline void Scene_LeaveScene_Response_22005::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_LeaveScene_Response_22005.Message)
}
inline ::std::string* Scene_LeaveScene_Response_22005::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_LeaveScene_Response_22005.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_LeaveScene_Response_22005::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_LeaveScene_Response_22005.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_LeaveScene_Response_22005::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_LeaveScene_Response_22005.Message)
}

// int32 Error = 3;
inline void Scene_LeaveScene_Response_22005::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_LeaveScene_Response_22005::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_LeaveScene_Response_22005.Error)
  return error_;
}
inline void Scene_LeaveScene_Response_22005::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_LeaveScene_Response_22005.Error)
}

// -------------------------------------------------------------------

// Scene_Brocast_new_player_enter_22006

// .SceneMsg.Struct_Player_Status newPlayerStatus = 1;
inline bool Scene_Brocast_new_player_enter_22006::has_newplayerstatus() const {
  return this != internal_default_instance() && newplayerstatus_ != NULL;
}
inline void Scene_Brocast_new_player_enter_22006::clear_newplayerstatus() {
  if (GetArenaNoVirtual() == NULL && newplayerstatus_ != NULL) {
    delete newplayerstatus_;
  }
  newplayerstatus_ = NULL;
}
inline const ::SceneMsg::Struct_Player_Status& Scene_Brocast_new_player_enter_22006::newplayerstatus() const {
  const ::SceneMsg::Struct_Player_Status* p = newplayerstatus_;
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_new_player_enter_22006.newPlayerStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::SceneMsg::Struct_Player_Status*>(
      &::SceneMsg::_Struct_Player_Status_default_instance_);
}
inline ::SceneMsg::Struct_Player_Status* Scene_Brocast_new_player_enter_22006::release_newplayerstatus() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Brocast_new_player_enter_22006.newPlayerStatus)
  
  ::SceneMsg::Struct_Player_Status* temp = newplayerstatus_;
  newplayerstatus_ = NULL;
  return temp;
}
inline ::SceneMsg::Struct_Player_Status* Scene_Brocast_new_player_enter_22006::mutable_newplayerstatus() {
  
  if (newplayerstatus_ == NULL) {
    newplayerstatus_ = new ::SceneMsg::Struct_Player_Status;
  }
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Brocast_new_player_enter_22006.newPlayerStatus)
  return newplayerstatus_;
}
inline void Scene_Brocast_new_player_enter_22006::set_allocated_newplayerstatus(::SceneMsg::Struct_Player_Status* newplayerstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete newplayerstatus_;
  }
  if (newplayerstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      newplayerstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, newplayerstatus, submessage_arena);
    }
    
  } else {
    
  }
  newplayerstatus_ = newplayerstatus;
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Brocast_new_player_enter_22006.newPlayerStatus)
}

// int32 RpcId = 2;
inline void Scene_Brocast_new_player_enter_22006::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_new_player_enter_22006::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_new_player_enter_22006.RpcId)
  return rpcid_;
}
inline void Scene_Brocast_new_player_enter_22006::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_new_player_enter_22006.RpcId)
}

// string Message = 3;
inline void Scene_Brocast_new_player_enter_22006::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Brocast_new_player_enter_22006::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
  return message_.GetNoArena();
}
inline void Scene_Brocast_new_player_enter_22006::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
}
#if LANG_CXX11
inline void Scene_Brocast_new_player_enter_22006::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
}
#endif
inline void Scene_Brocast_new_player_enter_22006::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
}
inline void Scene_Brocast_new_player_enter_22006::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
}
inline ::std::string* Scene_Brocast_new_player_enter_22006::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Brocast_new_player_enter_22006::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Brocast_new_player_enter_22006::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Brocast_new_player_enter_22006.Message)
}

// int32 Error = 4;
inline void Scene_Brocast_new_player_enter_22006::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_new_player_enter_22006::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_new_player_enter_22006.Error)
  return error_;
}
inline void Scene_Brocast_new_player_enter_22006::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_new_player_enter_22006.Error)
}

// -------------------------------------------------------------------

// Scene_Brocast_player_leave_22007

// int32 sessionID = 1;
inline void Scene_Brocast_player_leave_22007::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_player_leave_22007::sessionid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_leave_22007.sessionID)
  return sessionid_;
}
inline void Scene_Brocast_player_leave_22007::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_leave_22007.sessionID)
}

// int32 RpcId = 2;
inline void Scene_Brocast_player_leave_22007::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_player_leave_22007::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_leave_22007.RpcId)
  return rpcid_;
}
inline void Scene_Brocast_player_leave_22007::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_leave_22007.RpcId)
}

// string Message = 3;
inline void Scene_Brocast_player_leave_22007::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Brocast_player_leave_22007::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_leave_22007.Message)
  return message_.GetNoArena();
}
inline void Scene_Brocast_player_leave_22007::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_leave_22007.Message)
}
#if LANG_CXX11
inline void Scene_Brocast_player_leave_22007::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Brocast_player_leave_22007.Message)
}
#endif
inline void Scene_Brocast_player_leave_22007::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Brocast_player_leave_22007.Message)
}
inline void Scene_Brocast_player_leave_22007::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Brocast_player_leave_22007.Message)
}
inline ::std::string* Scene_Brocast_player_leave_22007::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Brocast_player_leave_22007.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Brocast_player_leave_22007::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Brocast_player_leave_22007.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Brocast_player_leave_22007::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Brocast_player_leave_22007.Message)
}

// int32 Error = 4;
inline void Scene_Brocast_player_leave_22007::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_player_leave_22007::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_player_leave_22007.Error)
  return error_;
}
inline void Scene_Brocast_player_leave_22007::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_player_leave_22007.Error)
}

// -------------------------------------------------------------------

// Player_Hit_Monster_Request_22008

// int32 sessionID = 1;
inline void Player_Hit_Monster_Request_22008::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 Player_Hit_Monster_Request_22008::sessionid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Request_22008.sessionID)
  return sessionid_;
}
inline void Player_Hit_Monster_Request_22008::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Request_22008.sessionID)
}

// int64 monsterUUID = 2;
inline void Player_Hit_Monster_Request_22008::clear_monsteruuid() {
  monsteruuid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Player_Hit_Monster_Request_22008::monsteruuid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Request_22008.monsterUUID)
  return monsteruuid_;
}
inline void Player_Hit_Monster_Request_22008::set_monsteruuid(::google::protobuf::int64 value) {
  
  monsteruuid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Request_22008.monsterUUID)
}

// int32 RpcId = 3;
inline void Player_Hit_Monster_Request_22008::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Player_Hit_Monster_Request_22008::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Request_22008.RpcId)
  return rpcid_;
}
inline void Player_Hit_Monster_Request_22008::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Request_22008.RpcId)
}

// string Message = 4;
inline void Player_Hit_Monster_Request_22008::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Player_Hit_Monster_Request_22008::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Request_22008.Message)
  return message_.GetNoArena();
}
inline void Player_Hit_Monster_Request_22008::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Request_22008.Message)
}
#if LANG_CXX11
inline void Player_Hit_Monster_Request_22008::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Player_Hit_Monster_Request_22008.Message)
}
#endif
inline void Player_Hit_Monster_Request_22008::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Player_Hit_Monster_Request_22008.Message)
}
inline void Player_Hit_Monster_Request_22008::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Player_Hit_Monster_Request_22008.Message)
}
inline ::std::string* Player_Hit_Monster_Request_22008::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Player_Hit_Monster_Request_22008.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Player_Hit_Monster_Request_22008::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Player_Hit_Monster_Request_22008.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Player_Hit_Monster_Request_22008::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Player_Hit_Monster_Request_22008.Message)
}

// int32 Error = 5;
inline void Player_Hit_Monster_Request_22008::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Player_Hit_Monster_Request_22008::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Request_22008.Error)
  return error_;
}
inline void Player_Hit_Monster_Request_22008::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Request_22008.Error)
}

// -------------------------------------------------------------------

// Player_Hit_Monster_Response_22009

// int32 RpcId = 1;
inline void Player_Hit_Monster_Response_22009::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Player_Hit_Monster_Response_22009::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Response_22009.RpcId)
  return rpcid_;
}
inline void Player_Hit_Monster_Response_22009::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Response_22009.RpcId)
}

// string Message = 2;
inline void Player_Hit_Monster_Response_22009::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Player_Hit_Monster_Response_22009::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Response_22009.Message)
  return message_.GetNoArena();
}
inline void Player_Hit_Monster_Response_22009::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Response_22009.Message)
}
#if LANG_CXX11
inline void Player_Hit_Monster_Response_22009::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Player_Hit_Monster_Response_22009.Message)
}
#endif
inline void Player_Hit_Monster_Response_22009::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Player_Hit_Monster_Response_22009.Message)
}
inline void Player_Hit_Monster_Response_22009::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Player_Hit_Monster_Response_22009.Message)
}
inline ::std::string* Player_Hit_Monster_Response_22009::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Player_Hit_Monster_Response_22009.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Player_Hit_Monster_Response_22009::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Player_Hit_Monster_Response_22009.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Player_Hit_Monster_Response_22009::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Player_Hit_Monster_Response_22009.Message)
}

// int32 Error = 3;
inline void Player_Hit_Monster_Response_22009::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Player_Hit_Monster_Response_22009::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Player_Hit_Monster_Response_22009.Error)
  return error_;
}
inline void Player_Hit_Monster_Response_22009::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Player_Hit_Monster_Response_22009.Error)
}

// -------------------------------------------------------------------

// Scene_Brocast_Player_Attack_Monster_22010

// int64 attackerUUID = 1;
inline void Scene_Brocast_Player_Attack_Monster_22010::clear_attackeruuid() {
  attackeruuid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Scene_Brocast_Player_Attack_Monster_22010::attackeruuid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.attackerUUID)
  return attackeruuid_;
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_attackeruuid(::google::protobuf::int64 value) {
  
  attackeruuid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.attackerUUID)
}

// int64 hurtedUUID = 2;
inline void Scene_Brocast_Player_Attack_Monster_22010::clear_hurteduuid() {
  hurteduuid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Scene_Brocast_Player_Attack_Monster_22010::hurteduuid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.hurtedUUID)
  return hurteduuid_;
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_hurteduuid(::google::protobuf::int64 value) {
  
  hurteduuid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.hurtedUUID)
}

// int32 RpcId = 3;
inline void Scene_Brocast_Player_Attack_Monster_22010::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_Player_Attack_Monster_22010::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.RpcId)
  return rpcid_;
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.RpcId)
}

// string Message = 4;
inline void Scene_Brocast_Player_Attack_Monster_22010::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Brocast_Player_Attack_Monster_22010::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
  return message_.GetNoArena();
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
}
#if LANG_CXX11
inline void Scene_Brocast_Player_Attack_Monster_22010::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
}
#endif
inline void Scene_Brocast_Player_Attack_Monster_22010::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
}
inline ::std::string* Scene_Brocast_Player_Attack_Monster_22010::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Brocast_Player_Attack_Monster_22010::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Message)
}

// int32 Error = 5;
inline void Scene_Brocast_Player_Attack_Monster_22010::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Brocast_Player_Attack_Monster_22010::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Error)
  return error_;
}
inline void Scene_Brocast_Player_Attack_Monster_22010::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Brocast_Player_Attack_Monster_22010.Error)
}

// -------------------------------------------------------------------

// Scene_Notify_Self_Other_Entity_Enter

// repeated .SceneMsg.Struct_Player_Status playersstatus = 1;
inline int Scene_Notify_Self_Other_Entity_Enter::playersstatus_size() const {
  return playersstatus_.size();
}
inline void Scene_Notify_Self_Other_Entity_Enter::clear_playersstatus() {
  playersstatus_.Clear();
}
inline const ::SceneMsg::Struct_Player_Status& Scene_Notify_Self_Other_Entity_Enter::playersstatus(int index) const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.playersstatus)
  return playersstatus_.Get(index);
}
inline ::SceneMsg::Struct_Player_Status* Scene_Notify_Self_Other_Entity_Enter::mutable_playersstatus(int index) {
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.playersstatus)
  return playersstatus_.Mutable(index);
}
inline ::SceneMsg::Struct_Player_Status* Scene_Notify_Self_Other_Entity_Enter::add_playersstatus() {
  // @@protoc_insertion_point(field_add:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.playersstatus)
  return playersstatus_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >*
Scene_Notify_Self_Other_Entity_Enter::mutable_playersstatus() {
  // @@protoc_insertion_point(field_mutable_list:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.playersstatus)
  return &playersstatus_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Player_Status >&
Scene_Notify_Self_Other_Entity_Enter::playersstatus() const {
  // @@protoc_insertion_point(field_list:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.playersstatus)
  return playersstatus_;
}

// repeated .SceneMsg.Struct_Monster_Status monsterstatus = 2;
inline int Scene_Notify_Self_Other_Entity_Enter::monsterstatus_size() const {
  return monsterstatus_.size();
}
inline void Scene_Notify_Self_Other_Entity_Enter::clear_monsterstatus() {
  monsterstatus_.Clear();
}
inline const ::SceneMsg::Struct_Monster_Status& Scene_Notify_Self_Other_Entity_Enter::monsterstatus(int index) const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.monsterstatus)
  return monsterstatus_.Get(index);
}
inline ::SceneMsg::Struct_Monster_Status* Scene_Notify_Self_Other_Entity_Enter::mutable_monsterstatus(int index) {
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.monsterstatus)
  return monsterstatus_.Mutable(index);
}
inline ::SceneMsg::Struct_Monster_Status* Scene_Notify_Self_Other_Entity_Enter::add_monsterstatus() {
  // @@protoc_insertion_point(field_add:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.monsterstatus)
  return monsterstatus_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >*
Scene_Notify_Self_Other_Entity_Enter::mutable_monsterstatus() {
  // @@protoc_insertion_point(field_mutable_list:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.monsterstatus)
  return &monsterstatus_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SceneMsg::Struct_Monster_Status >&
Scene_Notify_Self_Other_Entity_Enter::monsterstatus() const {
  // @@protoc_insertion_point(field_list:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.monsterstatus)
  return monsterstatus_;
}

// int32 RpcId = 90;
inline void Scene_Notify_Self_Other_Entity_Enter::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Notify_Self_Other_Entity_Enter::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.RpcId)
  return rpcid_;
}
inline void Scene_Notify_Self_Other_Entity_Enter::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.RpcId)
}

// string Message = 91;
inline void Scene_Notify_Self_Other_Entity_Enter::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Notify_Self_Other_Entity_Enter::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
  return message_.GetNoArena();
}
inline void Scene_Notify_Self_Other_Entity_Enter::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
}
#if LANG_CXX11
inline void Scene_Notify_Self_Other_Entity_Enter::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
}
#endif
inline void Scene_Notify_Self_Other_Entity_Enter::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
}
inline void Scene_Notify_Self_Other_Entity_Enter::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
}
inline ::std::string* Scene_Notify_Self_Other_Entity_Enter::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Notify_Self_Other_Entity_Enter::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Notify_Self_Other_Entity_Enter::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Message)
}

// int32 Error = 92;
inline void Scene_Notify_Self_Other_Entity_Enter::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Notify_Self_Other_Entity_Enter::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Error)
  return error_;
}
inline void Scene_Notify_Self_Other_Entity_Enter::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Enter.Error)
}

// -------------------------------------------------------------------

// Scene_Notify_Self_Other_Entity_Leave

// repeated int64 leaveduuid = 1;
inline int Scene_Notify_Self_Other_Entity_Leave::leaveduuid_size() const {
  return leaveduuid_.size();
}
inline void Scene_Notify_Self_Other_Entity_Leave::clear_leaveduuid() {
  leaveduuid_.Clear();
}
inline ::google::protobuf::int64 Scene_Notify_Self_Other_Entity_Leave::leaveduuid(int index) const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.leaveduuid)
  return leaveduuid_.Get(index);
}
inline void Scene_Notify_Self_Other_Entity_Leave::set_leaveduuid(int index, ::google::protobuf::int64 value) {
  leaveduuid_.Set(index, value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.leaveduuid)
}
inline void Scene_Notify_Self_Other_Entity_Leave::add_leaveduuid(::google::protobuf::int64 value) {
  leaveduuid_.Add(value);
  // @@protoc_insertion_point(field_add:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.leaveduuid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Scene_Notify_Self_Other_Entity_Leave::leaveduuid() const {
  // @@protoc_insertion_point(field_list:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.leaveduuid)
  return leaveduuid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Scene_Notify_Self_Other_Entity_Leave::mutable_leaveduuid() {
  // @@protoc_insertion_point(field_mutable_list:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.leaveduuid)
  return &leaveduuid_;
}

// int32 RpcId = 90;
inline void Scene_Notify_Self_Other_Entity_Leave::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Scene_Notify_Self_Other_Entity_Leave::rpcid() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.RpcId)
  return rpcid_;
}
inline void Scene_Notify_Self_Other_Entity_Leave::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.RpcId)
}

// string Message = 91;
inline void Scene_Notify_Self_Other_Entity_Leave::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Scene_Notify_Self_Other_Entity_Leave::message() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
  return message_.GetNoArena();
}
inline void Scene_Notify_Self_Other_Entity_Leave::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
}
#if LANG_CXX11
inline void Scene_Notify_Self_Other_Entity_Leave::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
}
#endif
inline void Scene_Notify_Self_Other_Entity_Leave::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
}
inline void Scene_Notify_Self_Other_Entity_Leave::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
}
inline ::std::string* Scene_Notify_Self_Other_Entity_Leave::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scene_Notify_Self_Other_Entity_Leave::release_message() {
  // @@protoc_insertion_point(field_release:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scene_Notify_Self_Other_Entity_Leave::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Message)
}

// int32 Error = 92;
inline void Scene_Notify_Self_Other_Entity_Leave::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Scene_Notify_Self_Other_Entity_Leave::error() const {
  // @@protoc_insertion_point(field_get:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Error)
  return error_;
}
inline void Scene_Notify_Self_Other_Entity_Leave::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:SceneMsg.Scene_Notify_Self_Other_Entity_Leave.Error)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SceneMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scene_2eproto__INCLUDED
